# 开发环境 Docker Compose 配置
version: '3.8'

services:
  # 只启动必要的服务
  webhook-server:
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
      # 开发环境使用 SQLite，简单快速
      - PRIMARY_STORAGE_TYPE=sqlite
      - PRIMARY_STORAGE_URL=file:./dev.db
      # 可选：启用 PostgreSQL 作为备用存储进行测试
      - ENABLE_FALLBACK_STORAGE=true
      - FALLBACK_STORAGE_TYPE=postgresql
      - FALLBACK_STORAGE_URL=postgresql://webhook:webhook123@postgres:5432/webhook_dev
    volumes:
      - ./logs:/app/logs
      - ./dev.db:/app/dev.db
    ports:
      - "3000:3000"

  # 开发环境的轻量级 PostgreSQL
  postgres:
    environment:
      - POSTGRES_DB=webhook_dev
      - POSTGRES_USER=webhook
      - POSTGRES_PASSWORD=webhook123
    ports:
      - "5433:5432"  # 避免与本地冲突
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro

  # 可选：Redis 用于队列测试
  redis:
    profiles:
      - with-redis
    ports:
      - "6380:6379"  # 避免与本地冲突

volumes:
  postgres_dev_data:
    driver: local

networks:
  webhook-network:
    driver: bridge
